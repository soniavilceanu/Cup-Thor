{
    "device-name": "Cup-Thor App",
    "device-type": "Oven",
    "buffers-count": 1,
    "input-buffers":{
        "settings":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "curl -XPOST 'http://127.0.0.1:8080/'",
            "buffer-tokens":[
            {
                "name":"Oven options",
                "description":"From here you can choose different settings for the oven",
                "token-type":"string", 
                "byte-size":8,
                "regex-rule": "^settings$", // Correct input will be: [settings]
                "optional": false
            },
            {
                "name":"Oven option parameter key",
                "description": "Parameter key for the setting chosen",
                "token-type":"string",
                "byte-size":19,
                "regex-rule": "^defrost$|^desired_temperature$|^ambient_light$|^ventilation$|^silent_mode$", // Correct inputs will be: [defrost]
                "optional": false
            },
            {
                "name":"Oven option parameter value",
                "description": "Parameter value for the setting chosen",
                "token-type":"string",
                "byte-size":4,
                "regex-rule": "^true$|^false$|^2[0-9][0-9]?$|^1[0-9][0-9]$|^300$|^[1-6]$", // Correct inputs will be: [true, false, number between 20 and 300, number between 1 and 6]
                "optional": false
            }
            ]
        },

        "cook":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "curl -XPOST 'http://127.0.0.1:8080/'",
            "buffer-tokens":[
            {
                "name":"Oven cooking programs",
                "description":"From here you can choose different cooking predefined cooking modes",
                "token-type":"string", 
                "byte-size":4,
                "regex-rule": "^cook$", // Correct input will be: [cook]
                "optional": false
            },
            {
                "name":"Oven cooking parameter value",
                "description": "Parameter value for the cooking mode chosen",
                "token-type":"string",
                "byte-size":10,
                "regex-rule": "^chicken$|^pork$|^vegetables$|^fish$", // Correct inputs will be: [chicken, pork, vegetables, fish]
                "optional": false
            },
            {
                "name":"Oven cooking parameter value",
                "description": "Parameter value for keeping the food heated after the oven is done, default is false",
                "token-type":"string",
                "byte-size":4,
                "regex-rule": "^true$|^false$$", // Correct inputs will be: [true, false]
                "optional": true
            }
            ]
        },

        "mediaplayer":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "curl -XPOST 'http://127.0.0.1:8080/'",
            "buffer-tokens":[
            {
                "name":"Media player status and commands",
                "description":"",
                "token-type":"string", 
                "byte-size":8,
                "regex-rule": "^mediaplayer$", // Correct input will be: [mediaplayer]
                "optional": false
            },
            {
                "name":"Mediaplayer option parameter key",
                "description": "Parameter key for the setting chosen",
                "token-type":"string",
                "byte-size":4,
                "regex-rule": "^play$|^stop$", // Correct inputs will be: [play, stop]
                "optional": false
            },
            {
                "name":"Mediaplayer song parameter value",
                "description": "Parameter value for the setting chosen",
                "token-type":"string",
                "byte-size":5000,
                "regex-rule": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$", // Correct inputs will be: a formated string in Base64 (should be a song)
                "optional": false
            }
            ]
        }


	
    },

    "output-buffers":{
        "settings":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "curl -XGET 'http://127.0.0.1:8080/'",
            "buffer-tokens":[
            {
                "name":"Oven options",
                "description":"From here you can further choose settings",
                "token-type":"string", 
                "byte-size":8, 
                "regex-rule": "^settings$",
                "optional": false
            },
            {
                "name":"Current value",
                "description": "Current value of the setting chosen",
                "token-type":"string",
                "byte-size":19,
                "regex-rule": "^defrost$|^desired_temperature$|^ambient_light$|^ventilation$|^silent_mode$",
                "optional": false
            }
            ]
        },

        "sensors":{
            "token-delimitators": "",
            "protocol": "HTTP",
            "prefix": "curl -XGET 'http://127.0.0.1:8080/'",
            "buffer-tokens":[
            {
                "name":"Oven sensors",
                "description":"From here you can further choose wich sensor ",
                "token-type":"string", 
                "byte-size":8, 
                "regex-rule": "^settings$",
                "optional": false
            },
            {
                "name":"Current value",
                "description": "Current value of the sensor chosen. The output will be in a file and you will get a confirmation or you will get a response with the status",
                "token-type":"string",
                "byte-size":10,
                "regex-rule": "^thermostat$|^camera$|^foodweight$",
                "optional": false
            }
            ]
        }
		
	
	
		
    }
}